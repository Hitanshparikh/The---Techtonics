{"ast":null,"code":"var _jsxFileName = \"/Users/omvipulbhairashiya/Desktop/untitled folder/frontend/src/components/MapView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Fix for default markers\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\nconst MapView = ({\n  data,\n  selectedRegion\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  useEffect(() => {\n    if (!mapRef.current || mapInstanceRef.current) return;\n\n    // Initialize map\n    const map = L.map(mapRef.current).setView([20.5937, 78.9629], 5); // Center of India\n\n    // Add OpenStreetMap tiles\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '© OpenStreetMap contributors'\n    }).addTo(map);\n    mapInstanceRef.current = map;\n    return () => {\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove();\n        mapInstanceRef.current = null;\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (!mapInstanceRef.current) return;\n\n    // Clear existing markers\n    mapInstanceRef.current.eachLayer(layer => {\n      if (layer instanceof L.Marker) {\n        var _mapInstanceRef$curre;\n        (_mapInstanceRef$curre = mapInstanceRef.current) === null || _mapInstanceRef$curre === void 0 ? void 0 : _mapInstanceRef$curre.removeLayer(layer);\n      }\n    });\n\n    // Add coastal region boundaries\n    const mumbaiBounds = L.latLngBounds([18.9, 72.7], [19.3, 73.0]);\n    const gujaratBounds = L.latLngBounds([20.0, 68.0], [24.0, 73.0]);\n    if (selectedRegion === 'all' || selectedRegion === 'Mumbai') {\n      L.rectangle(mumbaiBounds, {\n        color: '#0ea5e9',\n        weight: 2,\n        fillOpacity: 0.1\n      }).addTo(mapInstanceRef.current).bindPopup('Mumbai Coastal Region');\n    }\n    if (selectedRegion === 'all' || selectedRegion === 'Gujarat') {\n      L.rectangle(gujaratBounds, {\n        color: '#f59e0b',\n        weight: 2,\n        fillOpacity: 0.1\n      }).addTo(mapInstanceRef.current).bindPopup('Gujarat Coastal Region');\n    }\n\n    // Add data markers - check if data is valid array\n    if (Array.isArray(data) && data.length > 0) {\n      data.forEach(item => {\n        if (item.latitude && item.longitude) {\n          const riskScore = item.risk_score || 0;\n\n          // Create custom icon based on risk level\n          const iconColor = riskScore > 0.8 ? '#ef4444' : riskScore > 0.6 ? '#f97316' : riskScore > 0.4 ? '#f59e0b' : '#10b981';\n          const customIcon = L.divIcon({\n            className: 'custom-marker',\n            html: `<div style=\"\n              width: 20px; \n              height: 20px; \n              background-color: ${iconColor}; \n              border: 2px solid white; \n              border-radius: 50%; \n              box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n              display: flex;\n              align-items: center;\n              justify-content: center;\n              color: white;\n              font-size: 10px;\n              font-weight: bold;\n            \">${(riskScore * 100).toFixed(0)}</div>`,\n            iconSize: [20, 20],\n            iconAnchor: [10, 10]\n          });\n          const marker = L.marker([item.latitude, item.longitude], {\n            icon: customIcon\n          }).addTo(mapInstanceRef.current);\n\n          // Create popup content\n          const popupContent = `\n            <div class=\"p-2\">\n              <h3 class=\"font-bold text-lg mb-2\">${item.location || 'Unknown Location'}</h3>\n              <div class=\"space-y-1 text-sm\">\n                <p><strong>Risk Score:</strong> ${(riskScore * 100).toFixed(1)}%</p>\n                <p><strong>Timestamp:</strong> ${new Date(item.timestamp).toLocaleString()}</p>\n                ${item.tide_level ? `<p><strong>Tide Level:</strong> ${item.tide_level}m</p>` : ''}\n                ${item.wave_height ? `<p><strong>Wave Height:</strong> ${item.wave_height}m</p>` : ''}\n                ${item.wind_speed ? `<p><strong>Wind Speed:</strong> ${item.wind_speed} km/h</p>` : ''}\n                ${item.anomaly_detected ? '<p class=\"text-red-600 font-bold\">⚠️ Anomaly Detected</p>' : ''}\n              </div>\n            </div>\n          `;\n          marker.bindPopup(popupContent);\n        }\n      });\n\n      // Fit bounds if data exists\n      const bounds = L.latLngBounds(data.map(item => [item.latitude, item.longitude]).filter(coord => coord[0] && coord[1]));\n      if (bounds.isValid()) {\n        mapInstanceRef.current.fitBounds(bounds, {\n          padding: [20, 20]\n        });\n      }\n    }\n  }, [data, selectedRegion]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-96 rounded-lg overflow-hidden\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      className: \"w-full h-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(MapView, \"5U3tBeyuxoaciEisNJbl9JPbwXc=\");\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useEffect","useRef","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","MapView","data","selectedRegion","_s","mapRef","mapInstanceRef","current","map","setView","tileLayer","attribution","addTo","remove","eachLayer","layer","Marker","_mapInstanceRef$curre","removeLayer","mumbaiBounds","latLngBounds","gujaratBounds","rectangle","color","weight","fillOpacity","bindPopup","Array","isArray","length","forEach","item","latitude","longitude","riskScore","risk_score","iconColor","customIcon","divIcon","className","html","toFixed","iconSize","iconAnchor","marker","icon","popupContent","location","Date","timestamp","toLocaleString","tide_level","wave_height","wind_speed","anomaly_detected","bounds","filter","coord","isValid","fitBounds","padding","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/omvipulbhairashiya/Desktop/untitled folder/frontend/src/components/MapView.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Fix for default markers\ndelete (L.Icon.Default.prototype as any)._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n});\n\ninterface MapViewProps {\n  data: any[];\n  selectedRegion: string;\n}\n\nconst MapView: React.FC<MapViewProps> = ({ data, selectedRegion }) => {\n  const mapRef = useRef<HTMLDivElement>(null);\n  const mapInstanceRef = useRef<L.Map | null>(null);\n\n  useEffect(() => {\n    if (!mapRef.current || mapInstanceRef.current) return;\n\n    // Initialize map\n    const map = L.map(mapRef.current).setView([20.5937, 78.9629], 5); // Center of India\n    \n    // Add OpenStreetMap tiles\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '© OpenStreetMap contributors'\n    }).addTo(map);\n\n    mapInstanceRef.current = map;\n\n    return () => {\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove();\n        mapInstanceRef.current = null;\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!mapInstanceRef.current) return;\n\n    // Clear existing markers\n    mapInstanceRef.current.eachLayer((layer) => {\n      if (layer instanceof L.Marker) {\n        mapInstanceRef.current?.removeLayer(layer);\n      }\n    });\n\n    // Add coastal region boundaries\n    const mumbaiBounds = L.latLngBounds([18.9, 72.7], [19.3, 73.0]);\n    const gujaratBounds = L.latLngBounds([20.0, 68.0], [24.0, 73.0]);\n\n    if (selectedRegion === 'all' || selectedRegion === 'Mumbai') {\n      L.rectangle(mumbaiBounds, {\n        color: '#0ea5e9',\n        weight: 2,\n        fillOpacity: 0.1\n      }).addTo(mapInstanceRef.current).bindPopup('Mumbai Coastal Region');\n    }\n\n    if (selectedRegion === 'all' || selectedRegion === 'Gujarat') {\n      L.rectangle(gujaratBounds, {\n        color: '#f59e0b',\n        weight: 2,\n        fillOpacity: 0.1\n      }).addTo(mapInstanceRef.current).bindPopup('Gujarat Coastal Region');\n    }\n\n    // Add data markers - check if data is valid array\n    if (Array.isArray(data) && data.length > 0) {\n      data.forEach((item) => {\n        if (item.latitude && item.longitude) {\n          const riskScore = item.risk_score || 0;\n          \n          // Create custom icon based on risk level\n          const iconColor = riskScore > 0.8 ? '#ef4444' : \n                           riskScore > 0.6 ? '#f97316' : \n                           riskScore > 0.4 ? '#f59e0b' : '#10b981';\n          \n          const customIcon = L.divIcon({\n            className: 'custom-marker',\n            html: `<div style=\"\n              width: 20px; \n              height: 20px; \n              background-color: ${iconColor}; \n              border: 2px solid white; \n              border-radius: 50%; \n              box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n              display: flex;\n              align-items: center;\n              justify-content: center;\n              color: white;\n              font-size: 10px;\n              font-weight: bold;\n            \">${(riskScore * 100).toFixed(0)}</div>`,\n            iconSize: [20, 20],\n            iconAnchor: [10, 10]\n          });\n\n          const marker = L.marker([item.latitude, item.longitude], { icon: customIcon })\n            .addTo(mapInstanceRef.current);\n\n          // Create popup content\n          const popupContent = `\n            <div class=\"p-2\">\n              <h3 class=\"font-bold text-lg mb-2\">${item.location || 'Unknown Location'}</h3>\n              <div class=\"space-y-1 text-sm\">\n                <p><strong>Risk Score:</strong> ${(riskScore * 100).toFixed(1)}%</p>\n                <p><strong>Timestamp:</strong> ${new Date(item.timestamp).toLocaleString()}</p>\n                ${item.tide_level ? `<p><strong>Tide Level:</strong> ${item.tide_level}m</p>` : ''}\n                ${item.wave_height ? `<p><strong>Wave Height:</strong> ${item.wave_height}m</p>` : ''}\n                ${item.wind_speed ? `<p><strong>Wind Speed:</strong> ${item.wind_speed} km/h</p>` : ''}\n                ${item.anomaly_detected ? '<p class=\"text-red-600 font-bold\">⚠️ Anomaly Detected</p>' : ''}\n              </div>\n            </div>\n          `;\n\n          marker.bindPopup(popupContent);\n        }\n      });\n\n      // Fit bounds if data exists\n      const bounds = L.latLngBounds(data.map(item => [item.latitude, item.longitude]).filter(coord => coord[0] && coord[1]));\n      if (bounds.isValid()) {\n        mapInstanceRef.current.fitBounds(bounds, { padding: [20, 20] });\n      }\n    }\n\n  }, [data, selectedRegion]);\n\n  return (\n    <div className=\"w-full h-96 rounded-lg overflow-hidden\">\n      <div ref={mapRef} className=\"w-full h-full\" />\n    </div>\n  );\n};\n\nexport default MapView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}